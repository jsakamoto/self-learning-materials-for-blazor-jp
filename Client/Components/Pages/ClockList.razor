@inject ClockService ClockService

@foreach (var clock in _clocks)
{
    <div @key="clock.Id" class="clock">
        <div class="name">
            <span class="value">@clock.Name</span>
        </div>
        <div class="current-time">
            <span class="value">@clock.GetCurrentTime().ToString("MM/dd HH:mm:ss")</span>
        </div>
        <div class="time-zone">
            <span class="caption">タイムゾーン</span>
            <span class="value">@clock.TimeZoneId</span>
        </div>
    </div>
}

<div class="clock form">
    <div class="name">
        <span class="caption">表示名</span>
        <span class="input-field">
            <input type="text" @bind="_newClock.Name" autofocus />
        </span>
    </div>
    <div class="time-zone">
        <span class="caption">タイムゾーン</span>
        <span class="input-field">
            <select @bind="_newClock.TimeZoneId">
                @foreach (var zone in TimeZoneInfo.GetSystemTimeZones())
                {
                    <option value="@zone.Id">@zone</option>
                }
            </select>
        </span>
    </div>
    <div class="actions">
        <button class="button" @onclick="OnOK">OK</button>
    </div>
</div>

@code
{
    private IEnumerable<Clock> _clocks = [];

    private Clock _newClock = new();

    protected override async Task OnInitializedAsync()
    {
        _clocks = await this.ClockService.GetClocksAsync();
    }

    private async Task OnOK()
    {
        await this.ClockService.AddClockAsync(_newClock);
        _newClock = new();
    }
}
